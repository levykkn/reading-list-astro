---
import { UserButton, SignedIn, SignedOut } from "@clerk/astro/components";

const navLinks = [
    { href: "/", text: "Courses" },
    { href: "/blog", text: "Blog" },
    { href: "/about", text: "About" },
    { href: "/contact", text: "Contact" },
];

const { pathname } = Astro.url;
---

<header class="bg-white/80 dark:bg-gray-900/80 backdrop-blur-lg sticky top-0 z-50 border-b border-gray-200/50 dark:border-gray-800/50">
    <div class="w-full max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="flex items-center justify-between h-16">
            <!-- Site Name / Logo -->
            <a href="/" class="flex items-center gap-2 text-xl font-bold text-gray-800 dark:text-white hover:text-gray-900 dark:hover:text-gray-200 transition-colors">
                 <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="text-gray-800 dark:text-white"><path d="M4 19.5v-15A2.5 2.5 0 0 1 6.5 2H20v20H6.5a2.5 2.5 0 0 1 0-5H20"></path></svg>
                <span class="hidden sm:inline">Reading Lists</span>
            </a>

            <!-- Desktop Navigation Links -->
            <nav class="hidden md:flex items-center space-x-2">
                {navLinks.map(link => (
                    <a 
                        href={link.href} 
                        class:list={[
                            "px-4 py-2 rounded-md text-sm font-medium transition-colors",
                            pathname === link.href 
                                ? "bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white" 
                                : "text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 hover:text-gray-900 dark:hover:text-white"
                        ]}
                    >
                        {link.text}
                    </a>
                ))}
            </nav>

            <!-- Auth + Mobile Menu Toggle -->
            <div class="flex items-center gap-4">
                <SignedIn>
                    <UserButton afterSignOutUrl="/" />
                </SignedIn>
                 <SignedOut>
                    <a href="/sign-in" class="hidden sm:block text-sm font-medium text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white transition-colors">Sign In</a>
                    <a href="/sign-up" class="hidden sm:block bg-gray-800 text-white hover:bg-gray-900 dark:bg-white dark:text-gray-900 dark:hover:bg-gray-200 px-4 py-2 rounded-md text-sm font-medium transition-colors">
                        Sign Up
                    </a>
                </SignedOut>

                <button id="mobile-menu-button" class="md:hidden p-2 rounded-md text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-gray-800 dark:focus:ring-white">
                    <span class="sr-only">Open main menu</span>
                    <svg class="h-6 w-6" id="menu-icon-open" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                    </svg>
                    <svg class="h-6 w-6 hidden" id="menu-icon-close" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                    </svg>
                </button>
            </div>
        </div>
    </div>

    <!-- Mobile Menu -->
    <div id="mobile-menu" class="md:hidden hidden">
        <nav class="px-2 pt-2 pb-3 space-y-1 sm:px-3 border-t border-gray-200/50 dark:border-gray-800/50">
            {navLinks.map(link => (
                <a 
                    href={link.href}
                    class:list={[
                        "block px-3 py-2 rounded-md text-base font-medium",
                        pathname === link.href
                            ? "bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white"
                            : "text-gray-600 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-800 hover:text-gray-900 dark:hover:text-white"
                    ]}
                >
                    {link.text}
                </a>
            ))}
             <SignedOut>
                <div class="border-t border-gray-200/50 dark:border-gray-800/50 pt-4 mt-4 space-y-2">
                     <a href="/sign-in" class="block text-center text-base font-medium text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white transition-colors bg-gray-100 dark:bg-gray-800/50 px-4 py-2 rounded-md">
                        Sign In
                    </a>
                    <a href="/sign-up" class="block text-center bg-gray-800 text-white hover:bg-gray-900 dark:bg-white dark:text-gray-900 dark:hover:bg-gray-200 px-4 py-2 rounded-md text-base font-medium transition-colors">
                        Sign Up
                    </a>
                </div>
            </SignedOut>
        </nav>
    </div>
</header>

<script>
  const mobileMenuButton = document.getElementById('mobile-menu-button') as HTMLButtonElement | null;
  const mobileMenu = document.getElementById('mobile-menu') as HTMLElement | null;
  const menuIconOpen = document.getElementById('menu-icon-open') as SVGSVGElement | null;
  const menuIconClose = document.getElementById('menu-icon-close') as SVGSVGElement | null;

  if (mobileMenuButton && mobileMenu && menuIconOpen && menuIconClose) {
    mobileMenuButton.addEventListener('click', () => {
      const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
      mobileMenuButton.setAttribute('aria-expanded', !isExpanded ? 'true' : 'false');
      mobileMenu.classList.toggle('hidden');
      menuIconOpen.classList.toggle('hidden');
      menuIconClose.classList.toggle('hidden');
    });
  } else {
    console.error("One or more mobile menu elements not found.");
  }
</script>
